{"version":3,"file":"static/js/353.e88a5d63.chunk.js","mappings":"8SAEMA,EAAQC,EAAAA,EAAAA,MAAH,mKAULC,EAAOD,EAAAA,EAAAA,KAAH,yiBAuBJE,EAAQF,EAAAA,EAAAA,MAAH,iZAuBLG,EAASH,EAAAA,EAAAA,OAAH,0tBAoCNI,EAAWJ,EAAAA,EAAAA,GAAH,gI,yLC1FRK,GAAcL,EAAAA,EAAAA,IAAOM,EAAAA,EAAPN,CAAkB,CACpCO,MAAO,OACPC,OAAQ,OAER,UAAW,CACTC,MAAO,OACPC,SAAU,IAGZ,sBAAuB,CACrBD,MAAO,OACPC,SAAU,IAGZ,8BAA+B,CAC7BC,kBAAmB,WAGrB,2BAA4B,CAC1B,aAAc,CACZC,YAAa,QAGf,mBAAoB,CAClBA,YAAa,QAGf,yBAA0B,CACxBA,YAAa,WAIjB,wBAAyB,CACvBC,QAAS,YACTH,SAAU,GACVD,MAAO,UAILK,GAAed,EAAAA,EAAAA,IAAOG,EAAAA,EAAPH,CAAe,CAClCO,MAAO,OAEPQ,aAAc,OACdL,SAAU,GACVM,cAAe,YACfC,UAAW,iCACXC,WAAY,OACZC,eAAgB,YAEhBC,gBACE,qEAEF,UAAW,CACTC,mBAAoB,eACpBZ,MAAO,OACPa,eAAgB,OAChBC,gBAAiB,IAEnB,WAAY,CACVN,UAAW,OACXM,gBAAiB,UACjBX,YAAa,WAEf,UAAW,CACTK,UAAW,qCAyBThB,GAAOD,EAAAA,EAAAA,IAAOwB,EAAAA,EAAPxB,CAAH,gcAiBJyB,GAAYzB,EAAAA,EAAAA,IAAOwB,EAAAA,EAAPxB,CAAH,qE,yKCpGf,EARkB,SAAC0B,EAAUC,GAC3B,OAAID,EAASE,MAAK,qBAAGC,OAAoBF,CAAvB,MAChBG,EAAAA,OAAAA,QAAA,UAAkBH,EAAlB,6BACO,EAGV,E,kDC8EKI,EAAgB,CACpBF,KAAM,GACNG,OAAQ,IAGJC,EAASC,EAAAA,KAAaC,MAAM,CAChCN,KAAMK,EAAAA,KAEHE,QAZE,yHAYmB,yBACrBC,IAAI,EAAG,oBACPC,IAAI,GAAI,oBACRC,WACHP,OAAQE,EAAAA,KAAaM,YAAYC,SAAS,IAAIF,aAGhD,EAzFoB,WAClB,IAAQG,GAASC,EAAAA,EAAAA,MAATD,KACR,GAAoCE,EAAAA,EAAAA,MAApC,eAAOC,EAAP,KAAqBC,EAArB,KAAqBA,UAEfC,GAASC,EAAAA,EAAAA,IAAU,CACvBjB,cAAAA,EACAkB,SAAU,SAACC,EAAD,GAA4B,IAAjBC,EAAgB,EAAhBA,UACfC,EAAUV,EAAMQ,EAAOrB,QACzBgB,EAAW,CAAEhB,KAAMqB,EAAOrB,KAAKwB,OAAQrB,OAAQkB,EAAOlB,OAAOqB,SAC7DF,IAEH,EACDG,iBAAkBrB,IAGdsB,IAAeR,EAAOS,SAAWT,EAAOU,OAE9C,OACE,UAAC,KAAD,CAAMR,SAAUF,EAAOW,aAAvB,WACE,SAAC,KAAD,kCACA,SAACC,EAAA,EAAD,CAASC,MAAOb,EAAOc,OAAOhC,KAA9B,UACE,UAAC,KAAD,YACE,SAAC,KAAD,CACEiC,aAAa,MACbC,YAAY,OACZC,KAAK,OACLnC,KAAK,OACLoC,SAAUlB,EAAOmB,aACjBC,MAAOpB,EAAOG,OAAOrB,KACrBU,UAAQ,IAETQ,EAAOc,OAAOhC,MAAQkB,EAAOqB,QAAQvC,MACpC,0BAAOkB,EAAOc,OAAOhC,OACnB,WAGR,SAAC8B,EAAA,EAAD,CAASC,MAAOb,EAAOc,OAAO7B,OAA9B,UACE,UAAC,KAAD,YACE,SAAC,KAAD,CACE8B,aAAa,MACbC,YAAY,QACZC,KAAK,MACLnC,KAAK,SACLoC,SAAUlB,EAAOmB,aACjBC,MAAOpB,EAAOG,OAAOlB,OACrBqC,QAAQ,2FAETtB,EAAOc,OAAO7B,QAAUe,EAAOqB,QAAQpC,QACtC,0BAAOe,EAAOc,OAAO7B,SACnB,WAGR,SAAC,KAAD,CAAQgC,KAAK,SAASM,SAAUf,EAAhC,SACGT,GACC,SAACyB,EAAA,EAAD,CACEC,GAAI,CAAE/D,MAAO,WAAYgE,OAAQ,SAAUC,QAAS,SACpDC,QAAS,EACTC,UAAU,MAHZ,UAKE,SAACC,EAAA,EAAD,CAAkBpE,MAAM,YAAYqE,KAAM,OAG5C,kBAKT,E,oBCrED,EAV2B,WAAiC,IAAhCpD,EAA+B,uDAApB,GAAIqD,EAAgB,uDAAP,GAC5CC,EAAmBD,EAAOE,cAEhC,OAAOvD,EAASqD,QACd,gBAAGlD,EAAH,EAAGA,KAAMG,EAAT,EAASA,OAAT,OACEH,EAAKoD,cAAcC,SAASF,IAC5BhD,EAAOkD,SAASF,EAFlB,GAIH,E,0DCJKG,EAAcnF,EAAAA,EAAAA,IAAH,uHAQXG,GAASiF,EAAAA,EAAAA,IAAUC,EAAAA,EAAVD,CAAH,sVCoCZ,EAxCgB,SAAC,GAAyB,IAAvBE,EAAsB,EAAtBA,GAAIC,EAAkB,EAAlBA,YACrB,GAA6CC,EAAAA,EAAAA,MAA7C,eAAOC,EAAP,KAAwBC,EAAxB,KAAwBA,gBAExB,OACE,UAACP,EAAD,YACE,SAACxB,EAAA,EAAD,CAASC,MAAM,OAAf,UACE,SAACzD,EAAD,CAAQwF,MAAM,SAASC,QAAS,kBAAML,GAAY,EAAlB,EAAhC,UACE,SAACM,EAAA,EAAD,CAAiBrB,GAAI,CAAE9D,SAAU,UAGpCgF,GACC,SAAC/B,EAAA,EAAD,CAASC,MAAM,SAAf,UACE,SAACzD,EAAD,CACEwF,MAAM,MACN,aAAW,SACXrB,UAAWoB,EACXE,QAAS,kBAAMH,EAAcH,EAApB,EAJX,UAME,SAACQ,EAAA,EAAD,CAAkBtB,GAAI,CAAE9D,SAAU,WAItC,SAAC6D,EAAA,EAAD,CACEC,GAAI,CACF/D,MAAO,WACPF,MAAO,GACPmE,QAAS,cACTqB,WAAY,SACZC,eAAgB,UAElBrB,QAAS,EACTC,UAAU,MATZ,UAWE,SAACC,EAAA,EAAD,CAAkBpE,MAAM,YAAYqE,KAAM,SAKnD,E,uEC1CKmB,GAAWjG,EAAAA,EAAAA,IAAH,yOAcRkG,GAAYlG,EAAAA,EAAAA,IAAH,2QAcTmG,GAAWnG,EAAAA,EAAAA,IAAH,0jBAgCRc,IAAed,EAAAA,EAAAA,GAAOqF,EAAAA,EAAPrF,CAAH,0KAWZoG,IAAWpG,EAAAA,EAAAA,GAAOqF,EAAAA,EAAPrF,CAAH,2EAMRqG,IAAOrG,EAAAA,EAAAA,GAAOsG,GAAAA,EAAPtG,CAAH,qHASJE,GAAQF,EAAAA,EAAAA,MAAH,+bAyBLuG,GAAYvG,EAAAA,EAAAA,IAAH,6MC8DTiC,GAASC,EAAAA,KAAaC,MAAM,CAChCN,KAAMK,EAAAA,KAEHE,QAPE,yHAOmB,yBACrBC,IAAI,EAAG,oBACPC,IAAI,GAAI,oBAEXN,OAAQE,EAAAA,KAAaM,YAAYC,SAAS,MAEtCV,GAAgB,CACpBF,KAAM,GACNG,OAAQ,IAGV,GAnKc,SAAC,GAAmC,IAAjCsD,EAAgC,EAAhCA,GAAIzD,EAA4B,EAA5BA,KAAMG,EAAsB,EAAtBA,OAAQwE,EAAc,EAAdA,QACzB9D,GAASC,EAAAA,EAAAA,MAATD,KACR,GACE+D,EAAAA,EAAAA,KADF,eAAOC,EAAP,YAAsBC,EAAtB,EAAsBA,UAAW7D,EAAjC,EAAiCA,UAAW4C,EAA5C,EAA4CA,gBAAiBkB,EAA7D,EAA6DA,QAGvDC,EAASC,SAASC,eAAe,SAEjChE,GAASC,EAAAA,EAAAA,IAAU,CACvBjB,cAAAA,GACAkB,SAAU,SAACC,EAAD,GAA4B,IAAjBC,EAAgB,EAAhBA,UACb6D,EAAa9D,EAAOrB,KAAKwB,OACzB4D,EAAc/D,EAAOlB,OAAOqB,OAE9BD,EAAUV,EAAMQ,EAAOrB,QACzB6E,EAAY,CACVpB,GAAAA,EACAzD,KAAMmF,GAA0BnF,EAChCG,OAAQiF,GAA4BjF,IAGtCmB,IAEH,EACDG,iBAAkBrB,MAGpBiF,EAAAA,EAAAA,YAAU,WACHxB,GACHyB,YAAW,WACTX,GAAQ,EACT,GAAE,IAGN,GAAE,CAACd,KAEJwB,EAAAA,EAAAA,YAAU,WACR,IAAME,EAAgB,SAAAC,GACL,WAAXA,EAAEC,MACJd,GAAQ,EAEX,EAID,OAFAe,OAAOC,iBAAiB,UAAWJ,GAE5B,kBAAMG,OAAOE,oBAAoB,UAAWL,EAA5C,CACR,GAAE,CAACZ,IAEJ,IAAMjD,IAAeR,EAAOS,SAAWT,EAAOU,OAE9C,OAAOiE,EAAAA,cACL,SAACzB,GAAD,CAAUL,QAAS,kBAAMY,GAAQ,EAAd,EAAnB,UACE,UAACN,GAAD,CAAWN,QAAS,SAAAyB,GAAC,OAAIA,EAAEM,iBAAN,EAArB,WACE,SAACvB,GAAD,CAAUR,QAAS,kBAAMY,GAAQ,EAAd,EAAnB,UACE,SAACH,GAAD,OAEF,SAACE,GAAD,WACE,gBACEqB,IAAI,0DACJC,IAAI,SACJtH,MAAO,GACPuH,MAAO,CAAE/G,aAAc,YAG3B,UAACoF,GAAD,CACE2B,MAAO,CACLjH,QAAS,WACTkH,aAAc,QACdxH,MAAO,SAJX,WAOE,uBAAIsB,KAEJ,0BAAOG,OAER0D,IACC,SAACsC,EAAA,EAAD,CACExD,GAAI,CAAE9D,SAAU,GAAID,MAAO,OAAQsH,aAAc,WAGpDjF,IACC,SAAC,IAAD,CAAO0B,GAAI,CAAE/D,MAAO,YAAckE,QAAS,EAAGC,UAAU,MAAxD,UACE,SAACC,EAAA,EAAD,CAAkBpE,MAAM,gBAG3BkG,IACC,SAACsB,EAAA,EAAD,CACEzD,GAAI,CAAE9D,SAAU,GAAID,MAAO,uBAG9BmG,IAAW,SAACsB,EAAA,EAAD,CAAkB1D,GAAI,CAAE9D,SAAU,GAAID,MAAO,UACzD,UAACe,EAAA,EAAD,CACE2G,UAAU,OACVlF,SAAUF,EAAOW,aACjBc,GAAI,CACFE,QAAS,OACT0D,SAAU,OACVpC,eAAgB,UANpB,WASE,UAACG,GAAD,YACE,SAACxC,EAAA,EAAD,CAASC,MAAOb,EAAOc,OAAOhC,KAA9B,UACE,UAAC,KAAD,YACE,SAAC3B,GAAD,CACE6D,YAAY,OACZlC,KAAK,OACLmC,KAAK,OACLqE,QAAQ,WACRpE,SAAUlB,EAAOmB,aACjBC,MAAOpB,EAAOG,OAAOrB,OAEtBkB,EAAOc,OAAOhC,MAAQkB,EAAOqB,QAAQvC,MACpC,0BAAOkB,EAAOc,OAAOhC,OACnB,WAIR,SAAC8B,EAAA,EAAD,CAASC,MAAOb,EAAOc,OAAO7B,OAA9B,UACE,UAAC,KAAD,YACE,SAAC9B,GAAD,CACE4D,aAAa,MACbjC,KAAK,SACLkC,YAAY,QACZC,KAAK,MACLqE,QAAQ,WACRpE,SAAUlB,EAAOmB,aACjBC,MAAOpB,EAAOG,OAAOlB,OACrBqC,QAAQ,2FAETtB,EAAOG,OAAOlB,OAAOsG,OAAS,IAC7B,0BAAOvF,EAAOc,OAAO7B,SACnBuG,QAAQC,IAAI,cAItB,SAAC1H,GAAD,CAAckD,KAAK,SAASM,SAAUf,EAAtC,UACE,SAACkF,EAAA,EAAD,CAAiBjE,GAAI,CAAE9D,SAAU,GAAID,MAAO,uBAKpDoG,EAEH,ECxKK6B,GAAc1I,EAAAA,EAAAA,GAAH,6wBAyCX2I,GAAqB3I,EAAAA,EAAAA,IAAH,8DAKlB4I,GAAU5I,EAAAA,EAAAA,IAAH,wKCjBb,GArBwB,SAAC,GAA0B,IAAxBsF,EAAuB,EAAvBA,GAAIzD,EAAmB,EAAnBA,KAAMG,EAAa,EAAbA,OACnC,GAAkC6G,EAAAA,EAAAA,WAAS,GAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KAEA,OACE,iCACE,UAACL,GAAD,YACE,SAACE,GAAD,WACE,cAAGd,MAAO,CAAEkB,SAAU,SAAtB,SAAkCnH,OAEpC,SAAC8G,GAAD,WACE,uBAAI3G,OAEN,SAAC,EAAD,CAASsD,GAAIA,EAAIC,YAAawD,OAE/BD,IACC,SAAC,GAAD,CAAOxD,GAAIA,EAAIzD,KAAMA,EAAMG,OAAQA,EAAQwE,QAASuC,MAI3D,EC3BKE,GAAejJ,EAAAA,EAAAA,GAAH,uIAQZD,GAAQC,EAAAA,EAAAA,IAAH,gPAoBL4I,GAAU5I,EAAAA,EAAAA,IAAH,8GC9BAkJ,GAAe,SAAAC,GAAK,OAAIA,EAAMpE,MAAV,E,WC0CjC,GAjCoB,WAClB,IAAMA,GAASqE,EAAAA,GAAAA,IAAYF,IAC3B,GAA4BvG,EAAAA,EAAAA,MAApBD,EAAR,EAAQA,KAAMI,EAAd,EAAcA,UACRpB,EAAW2H,EAAmB3G,EAAMqC,GAC1C,OAAIjC,GACK,eAAIgF,MAAO,CAAEwB,UAAW,UAAxB,yBAGP,gCACGxG,IAAa,wCACd,UAAC/C,GAAD,YACE,UAAC,GAAD,YACE,wBACE,SAAC,MAAD,OAEF,wCAEF,UAAC,GAAD,YACE,wBACE,SAAC,MAAD,OAEF,4CAGJ,SAACkJ,GAAD,UACGvH,EAAS6H,KAAI,gBAAGjE,EAAH,EAAGA,GAAIzD,EAAP,EAAOA,KAAMG,EAAb,EAAaA,OAAb,OACZ,SAAC,GAAD,CAA0BsD,GAAIA,EAAIzD,KAAMA,EAAMG,OAAQA,GAAhCsD,EADV,QAMrB,E,UCtCKvF,GAAQC,EAAAA,EAAAA,MAAH,uQAcLE,GAAQF,EAAAA,EAAAA,MAAH,0PCUX,GArBe,WACb,IAAM+E,GAASqE,EAAAA,GAAAA,IAAYF,IACrBM,GAAWC,EAAAA,GAAAA,MAMjB,OACE,UAAC,GAAD,YACE,qEACA,SAAC,GAAD,CACEzF,KAAK,OACLnC,KAAK,SACLsC,MAAOY,EACPd,SAXqB,SAAAoD,GACzBmC,GAASE,EAAAA,GAAAA,GAASrC,EAAEsC,OAAOxF,OAC5B,MAaF,E,WCwBD,GArCiB,WACf,OAAkCxB,EAAAA,EAAAA,MAAlC,IAAQD,KAAAA,OAAR,MAAe,GAAf,EAAmBkH,EAAnB,EAAmBA,WAEnB,OAAIlH,EAAK4F,QAAU,GAEf,SAAC,MAAD,CAAWH,UAAU,MAAM3D,GAAI,CAAEjE,MAAO,MAAOsJ,OAAQ,QAAvD,UACE,SAAC,KAAD,kDAMJ,UAAC,MAAD,CAAW1B,UAAU,MAAM3D,GAAI,CAAEsF,SAAU,QAASd,SAAU,OAA9D,WACE,SAAC,GAAD,KACA,UAACxH,EAAA,EAAD,CAAK2G,UAAU,MAAM3D,GAAI,CAAEuF,SAAU,WAAYxJ,MAAO,QAAxD,WACE,SAAC,KAAD,uBAECqJ,IACC,SAACrF,EAAA,EAAD,CACEC,GAAI,CACF/D,MAAO,WACPsJ,SAAU,WACVC,MAAO,MACPC,UAAW,sBAEbtF,QAAS,EACTC,UAAU,MARZ,UAUE,SAACC,EAAA,EAAD,CAAkBpE,MAAM,kBAI9B,SAAC,GAAD,MAGL,ECtBD,GAnBqB,WACnB,OACE,8BACE,UAAC,MAAD,CACE+D,GAAI,CACF0F,cAAe,SACflE,eAAgB,SAChBD,WAAY,SACZoE,IAAK,GACLC,WAAY,IANhB,WASE,SAAC,EAAD,KACA,SAAC,GAAD,QAIP,C","sources":["components/ContactForm/ContactForm.styled.jsx","components/SignUp/SignUp.styled.jsx","services/checkContactName.js","components/ContactForm/ContactForm.jsx","services/contactsFiltration.js","components/ItemBar/ItemBar.styled.jsx","components/ItemBar/ItemBar.jsx","components/Modal/Modal.styled.jsx","components/Modal/Modal.jsx","components/ContactListItem/ContactListItem.styled.jsx","components/ContactListItem/ContactListItem.jsx","components/ContactList/ContactList.styled.jsx","redux/phonebook/selectors.js","components/ContactList/ContactList.jsx","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","components/Contacts/Contacts.jsx","pages/ContactsPage.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nconst Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  color: #fff;\n  font-size: 16px;\n  line-height: 1.7;\n  font-weight: 500;\n  width: 100%;\n`;\n\nconst Form = styled.form`\n  display: flex;\n  margin-top: 100px;\n  align-items: center;\n  justify-content: center;\n  flex-direction: column;\n  top: 100px;\n  width: 400px;\n  min-height: 250px;\n  max-height: 400px;\n  gap: 30px;\n  padding: 20px;\n  border: 1px solid white;\n  background-color: #fffffffa;\n  border-radius: 10px;\n\n  box-shadow: rgba(0, 0, 0, 0.25) 0px 54px 55px,\n    rgba(0, 0, 0, 0.12) 0px -12px 30px, rgba(0, 0, 0, 0.12) 0px 4px 6px,\n    rgba(0, 0, 0, 0.17) 0px 12px 13px, rgba(0, 0, 0, 0.09) 0px -3px 5px;\n\n  color: #fff;\n`;\n\nconst Input = styled.input`\n  width: 100%;\n  height: 35px;\n  padding-left: 10px;\n  margin-bottom: 10px;\n  font-size: 16px;\n  border: 1px solid black;\n  border-radius: 5px;\n  outline: yellow;\n  background-color: rgba(255, 255, 255, 0.4);\n\n  &:focus,\n  &:hover {\n    border: 2px solid orange;\n  }\n\n  &:placeholder-shown {\n    color: black;\n    font-size: 14px;\n    font-weight: 700;\n  }\n`;\n\nconst Button = styled.button`\n  display: block;\n  margin-top: 10px;\n  width: 100%;\n  padding: 8px 30px;\n  background-image: linear-gradient(\n    to right,\n    #32d648 0%,\n    #24fec4 51%,\n    #00ff95 100%\n  );\n\n  text-align: center;\n  text-transform: uppercase;\n  transition: 0.5s;\n  background-size: 200% auto;\n  color: #212121;\n  box-shadow: 0 0 20px rgba(255, 255, 255, 0.5);\n  border-radius: 10px;\n\n  font-size: 18px;\n\n  &:hover {\n    background-position: right center; /* change the direction of the change here */\n    color: ora;\n    text-decoration: none;\n  }\n\n  &:disabled {\n    background-color: rgba(255, 255, 255, 0.4);\n    background-image: none;\n    box-shadow: none;\n    border: none;\n  }\n`;\n\nconst SubTitle = styled.h2`\n  color: black;\n  font-size: 28px;\n  font-weight: 700;\n  text-align: center;\n  margin-bottom: 20px;\n`;\nexport { Label, Form, Input, Button, SubTitle };\n","import { Button, TextField, Box } from '@mui/material';\n\nimport { styled } from '@mui/material/styles';\n\nconst StyledInput = styled(TextField)({\n  width: '100%',\n  height: '60px',\n\n  '& label': {\n    color: '#000',\n    fontSize: 14,\n  },\n\n  '& label.Mui-focused': {\n    color: '#000',\n    fontSize: 16,\n  },\n\n  '& .MuiInput-underline:after': {\n    borderBottomColor: '#ff9d00',\n  },\n\n  '& .MuiOutlinedInput-root': {\n    '& fieldset': {\n      borderColor: '#000',\n    },\n\n    '&:hover fieldset': {\n      borderColor: '#000',\n    },\n\n    '&.Mui-focused fieldset': {\n      borderColor: 'yellow',\n    },\n  },\n\n  '& .MuiInputBase-input': {\n    padding: '10px 12px',\n    fontSize: 16,\n    color: '#000',\n  },\n});\n\nconst StyledButton = styled(Button)({\n  width: '100%',\n\n  borderRadius: '30px',\n  fontSize: 16,\n  textTransform: 'uppercase',\n  boxShadow: '0 0 20px rgba(255,255,255,0.5)',\n  transition: '0.5s',\n  backgroundSize: '200% auto',\n\n  backgroundImage:\n    'linear-gradient(to right, #c9a750 0%, #dea896  51%, #c97650  100%)',\n\n  '&:hover': {\n    backgroundPosition: 'right center',\n    color: '#fff',\n    textDecoration: 'none',\n    backgroundColor: '',\n  },\n  '&:active': {\n    boxShadow: 'none',\n    backgroundColor: '#0062cc',\n    borderColor: '#005cbf',\n  },\n  '&:focus': {\n    boxShadow: '0 0 0 0.2rem rgba(0,123,255,.5)',\n  },\n});\n//\n\n//  .btn-grad {\n//     background-image: linear-gradient(to right, #F09819 0%, #EDDE5D  51%, #F09819  100%);\n//     margin: 10px;\n//     padding: 15px 45px;\n//     text-align: center;\n//     text-transform: uppercase;\n//     transition: 0.5s;\n//     background-size: 200% auto;\n//     color: white;\n//     box-shadow: 0 0 20px #eee;\n//     border-radius: 10px;\n//     display: block;\n//   }\n\n//   .btn-grad:hover {\n//     background-position: right center; /* change the direction of the change here */\n//     color: #fff;\n//     text-decoration: none;\n//   }\n\nconst Form = styled(Box)`\n  width: 400px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-direction: column;\n  gap: 30px;\n  padding: 30px 20px;\n  color: black;\n  background-color: #fffffffa;\n  border-radius: 10px;\n\n  box-shadow: rgba(0, 0, 0, 0.25) 0px 54px 55px,\n    rgba(0, 0, 0, 0.12) 0px -12px 30px, rgba(0, 0, 0, 0.12) 0px 4px 6px,\n    rgba(0, 0, 0, 0.17) 0px 12px 13px, rgba(0, 0, 0, 0.09) 0px -3px 5px;\n`;\n\nconst Container = styled(Box)`\n  display: flex;\n  justify-content: center;\n`;\nexport { StyledButton, StyledInput, Form, Container };\n","import { Report } from 'notiflix';\n\nconst isNewName = (contacts, contactName) => {\n  if (contacts.some(({ name }) => name === contactName)) {\n    Report.warning(`${contactName} is already in contacts`);\n    return false;\n  }\n  return true;\n};\n\nexport default isNewName;\n","import { useFormik } from 'formik';\nimport * as yup from 'yup';\nimport React from 'react';\nimport { Label, Input, Button, Form, SubTitle } from './ContactForm.styled';\nimport isNewName from 'services/checkContactName';\nimport {\n  useAddContactMutation,\n  useGetContactsQuery,\n} from 'redux/phonebook/contactsSlice.js';\nimport { Stack } from '@mui/system';\nimport { CircularProgress, Tooltip } from '@mui/material';\n\nconst ContactForm = () => {\n  const { data } = useGetContactsQuery();\n  const [addContact, { isLoading }] = useAddContactMutation();\n\n  const formik = useFormik({\n    initialValues,\n    onSubmit: (values, { resetForm }) => {\n      if (isNewName(data, values.name)) {\n        addContact({ name: values.name.trim(), number: values.number.trim() });\n        resetForm();\n      }\n    },\n    validationSchema: schema,\n  });\n\n  const isDisabled = !(formik.isValid && formik.dirty);\n\n  return (\n    <Form onSubmit={formik.handleSubmit}>\n      <SubTitle>Create New contact</SubTitle>\n      <Tooltip title={formik.errors.name}>\n        <Label>\n          <Input\n            autoComplete=\"off\"\n            placeholder=\"Name\"\n            type=\"text\"\n            name=\"name\"\n            onChange={formik.handleChange}\n            value={formik.values.name}\n            required\n          />\n          {formik.errors.name && formik.touched.name ? (\n            <span>{formik.errors.name}</span>\n          ) : null}\n        </Label>\n      </Tooltip>\n      <Tooltip title={formik.errors.number}>\n        <Label>\n          <Input\n            autoComplete=\"off\"\n            placeholder=\"Phone\"\n            type=\"tel\"\n            name=\"number\"\n            onChange={formik.handleChange}\n            value={formik.values.number}\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          />\n          {formik.errors.number && formik.touched.number ? (\n            <span>{formik.errors.number}</span>\n          ) : null}\n        </Label>\n      </Tooltip>\n      <Button type=\"submit\" disabled={isDisabled}>\n        {isLoading ? (\n          <Stack\n            sx={{ color: 'grey.500', margin: '0 auto', display: 'block' }}\n            spacing={2}\n            direction=\"row\"\n          >\n            <CircularProgress color=\"secondary\" size={26} />\n          </Stack>\n        ) : (\n          'Add contact'\n        )}\n      </Button>\n    </Form>\n  );\n};\n\nconst pattern = {\n  str: \"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\",\n  number: '+?d{1,4}?[-.s]?(?d{1,3}?)?[-.s]?d{1,4}[-.s]?d{1,4}[-.s]?d{1,9}',\n};\n\nconst initialValues = {\n  name: '',\n  number: '',\n};\n\nconst schema = yup.object().shape({\n  name: yup\n    .string()\n    .matches(pattern.str, 'Name must be a string')\n    .min(3, 'to short, min: 3')\n    .max(20, 'to long, max: 20')\n    .required(),\n  number: yup.number().typeError().moreThan(12).required(),\n});\n\nexport default ContactForm;\n","const contactsFiltration = (contacts = [], filter = '') => {\n  const normalizedFilter = filter.toLowerCase();\n\n  return contacts.filter(\n    ({ name, number }) =>\n      name.toLowerCase().includes(normalizedFilter) ||\n      number.includes(normalizedFilter)\n  );\n};\n\nexport default contactsFiltration;\n","import styled from '@emotion/styled';\nimport { IconButton } from '@mui/material';\nimport { styled as muiStyled } from '@mui/material/styles';\n\nconst WrapperIcon = styled.div`\n  height: 100%;\n  display: flex;\n  border-radius: 25px;\n  gap: 5px;\n  margin-right: 10px;\n`;\n\nconst Button = muiStyled(IconButton)`\n  color: #212121;\n  text-align: center;\n  text-transform: uppercase;\n  transition: 0.5s;\n  background-size: 200% auto;\n\n  border-radius: 50%;\n  display: block;\n\n  &:hover {\n    background-position: right center;\n    background-color: rgba(0, 0, 0, 0.2);\n    color: yellow\n  };\n    text-decoration: none\n`;\n\nexport { Button, WrapperIcon };\n","import BorderColorIcon from '@mui/icons-material/BorderColor';\nimport PersonRemoveIcon from '@mui/icons-material/PersonRemove';\nimport { CircularProgress, Tooltip } from '@mui/material';\nimport { Stack } from '@mui/system';\n\nimport { useDeleteContactMutation } from 'redux/phonebook/contactsSlice';\nimport { Button, WrapperIcon } from './ItemBar.styled';\n\nconst ItemBar = ({ id, isOpenModal }) => {\n  const [deleteContact, { isUninitialized }] = useDeleteContactMutation();\n\n  return (\n    <WrapperIcon>\n      <Tooltip title=\"Edit\">\n        <Button hover=\"yellow\" onClick={() => isOpenModal(true)}>\n          <BorderColorIcon sx={{ fontSize: 24 }} />\n        </Button>\n      </Tooltip>\n      {isUninitialized ? (\n        <Tooltip title=\"Remove\">\n          <Button\n            hover=\"red\"\n            aria-label=\"Delete\"\n            disabled={!isUninitialized}\n            onClick={() => deleteContact(id)}\n          >\n            <PersonRemoveIcon sx={{ fontSize: 24}} />\n          </Button>\n        </Tooltip>\n      ) : (\n        <Stack\n          sx={{\n            color: 'grey.500',\n            width: 40,\n            display: 'inline-flex',\n            alignItems: 'center',\n            justifyContent: 'center',\n          }}\n          spacing={2}\n          direction=\"row\"\n        >\n          <CircularProgress color=\"secondary\" size={22} />\n        </Stack>\n      )}\n    </WrapperIcon>\n  );\n};\n\nexport default ItemBar;\n","import styled from '@emotion/styled';\nimport { IconButton } from '@mui/material';\nimport CloseIcon from '@mui/icons-material/Close';\n\nconst Backdrop = styled.div`\n  position: fixed;\n  display: flex;\n  top: 0;\n  left: 0;\n  width: 100vw;\n  height: 100vh;\n  justify-content: center;\n  align-items: center;\n  background-color: rgba(0, 0, 0, 0.8);\n\n  z-index: 1200;\n`;\n\nconst ModalBody = styled.div`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  gap: 70px;\n  width: 540px;\n  padding: 30px 0 10px 0;\n\n  background-color: #ffffffe5;\n  border-radius: 20px;\n  align-items: center;\n`;\n\nconst Fieldset = styled.div`\n  position: relative;\n  display: flex;\n  align-items: center;\n  justify-content: space-around;\n  align-items: center;\n  width: 90%;\n  max-height: 55px;\n  gap: 20px;\n\n  color: #fff;\n  border-radius: 10px;\n  background-color: #ff9500;\n  border: 1px solid #000000;\n  font-size: 18px;\n\n  & span {\n    width: 100px;\n    text-align: center;\n  }\n  &::before {\n    content: '';\n    position: absolute;\n    top: 0;\n    right: 213px;\n    height: 100%;\n    width: 1px;\n    background-color: #000000;\n    border-radius: 5px;\n  }\n`;\n\nconst StyledButton = styled(IconButton)`\n  display: block;\n  margin-top: 20px;\n  color: #000;\n\n  transition: color 150ms ease-in-out;\n  &:hover {\n    color: rgb(26, 172, 48);\n  }\n`;\n\nconst CloseBtn = styled(IconButton)`\n  position: absolute;\n  top: 5px;\n  right: 5px;\n`;\n\nconst Icon = styled(CloseIcon)`\n  color: #000;\n\n  transition: color 150ms ease-in-out;\n  &:hover {\n    color: red;\n  }\n`;\n\nconst Input = styled.input`\n  width: 100%;\n  height: 50px;\n  font-size: 16px;\n  border: none;\n  border-radius: 5px;\n  outline: yellow;\n  background-color: transparent;\n  border: 2px solid transparent;\n  border-radius: 10px;\n  color: black;\n\n  padding-left: 20px;\n  &:placeholder-shown &:focus,\n  &:hover {\n    border: 2px solid white;\n  }\n\n  &:placeholder-shown {\n    color: black;\n    font-size: 14px;\n    font-weight: 500;\n  }\n`;\n\nconst AvatarBgd = styled.div`\n  display: inline-flex;\n  align-items: center;\n  justify-content: center;\n  justify-self: flex-start;\n  margin-bottom: -20px;\n  border-radius: 50%;\n  background-color: grey;\n`;\n\nexport {\n  Backdrop,\n  ModalBody,\n  Fieldset,\n  StyledButton,\n  CloseBtn,\n  Icon,\n  Input,\n  AvatarBgd,\n};\n","import { Box } from '@mui/system';\nimport CheckCircleIcon from '@mui/icons-material/CheckCircle';\nimport ArrowDownwardIcon from '@mui/icons-material/ArrowDownward';\nimport { useEffect } from 'react';\nimport ReactDOM from 'react-dom';\nimport { CircularProgress, Stack, Tooltip } from '@mui/material';\nimport CheckCircleOutlineIcon from '@mui/icons-material/CheckCircleOutline';\nimport WarningAmberIcon from '@mui/icons-material/WarningAmber';\nimport * as yup from 'yup';\n\nimport {\n  Backdrop,\n  CloseBtn,\n  Fieldset,\n  Icon,\n  ModalBody,\n  Input,\n  StyledButton,\n  AvatarBgd,\n} from './Modal.styled';\nimport {\n  useEditContactMutation,\n  useGetContactsQuery,\n} from 'redux/phonebook/contactsSlice';\nimport { useFormik } from 'formik';\nimport isNewName from 'services/checkContactName';\nimport { Label } from 'components/ContactForm/ContactForm.styled';\n\nconst Modal = ({ id, name, number, onClose }) => {\n  const { data } = useGetContactsQuery();\n  const [editContact, { isSuccess, isLoading, isUninitialized, isError }] =\n    useEditContactMutation();\n\n  const portal = document.getElementById('modal');\n\n  const formik = useFormik({\n    initialValues,\n    onSubmit: (values, { resetForm }) => {\n      const editedName = values.name.trim();\n      const editedPhone = values.number.trim();\n\n      if (isNewName(data, values.name)) {\n        editContact({\n          id,\n          name: editedName ? editedName : name,\n          number: editedPhone ? editedPhone : number,\n        });\n\n        resetForm();\n      }\n    },\n    validationSchema: schema,\n  });\n\n  useEffect(() => {\n    if (!isUninitialized) {\n      setTimeout(() => {\n        onClose(false);\n      }, 1000);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [isUninitialized]);\n\n  useEffect(() => {\n    const handleKeyDown = e => {\n      if (e.code === 'Escape') {\n        onClose(false);\n      }\n    };\n\n    window.addEventListener('keydown', handleKeyDown);\n\n    return () => window.removeEventListener('keydown', handleKeyDown);\n  }, [onClose]);\n\n  const isDisabled = !(formik.isValid && formik.dirty);\n\n  return ReactDOM.createPortal(\n    <Backdrop onClick={() => onClose(false)}>\n      <ModalBody onClick={e => e.stopPropagation()}>\n        <CloseBtn onClick={() => onClose(false)}>\n          <Icon />\n        </CloseBtn>\n        <AvatarBgd>\n          <img\n            src=\"https://cdn-icons-png.flaticon.com/512/2922/2922506.png\"\n            alt=\"avatar\"\n            width={70}\n            style={{ borderRadius: '50%' }}\n          />\n        </AvatarBgd>\n        <Fieldset\n          style={{\n            padding: '15px 5px',\n            marginBottom: '-20px',\n            width: '432px',\n          }}\n        >\n          <p>{name}</p>\n\n          <span>{number}</span>\n        </Fieldset>\n        {isUninitialized && (\n          <ArrowDownwardIcon\n            sx={{ fontSize: 80, color: '#000', marginBottom: '-20px' }}\n          />\n        )}\n        {isLoading && (\n          <Stack sx={{ color: 'grey.500' }} spacing={2} direction=\"row\">\n            <CircularProgress color=\"secondary\" />\n          </Stack>\n        )}\n        {isSuccess && (\n          <CheckCircleOutlineIcon\n            sx={{ fontSize: 70, color: ' rgb(26, 172, 48)' }}\n          />\n        )}\n        {isError && <WarningAmberIcon sx={{ fontSize: 70, color: 'red' }} />}\n        <Box\n          component=\"form\"\n          onSubmit={formik.handleSubmit}\n          sx={{\n            display: 'flex',\n            flexWrap: 'wrap',\n            justifyContent: 'center',\n          }}\n        >\n          <Fieldset>\n            <Tooltip title={formik.errors.name}>\n              <Label>\n                <Input\n                  placeholder=\"Name\"\n                  name=\"name\"\n                  type=\"text\"\n                  variant=\"outlined\"\n                  onChange={formik.handleChange}\n                  value={formik.values.name}\n                />\n                {formik.errors.name && formik.touched.name ? (\n                  <span>{formik.errors.name}</span>\n                ) : null}\n              </Label>\n            </Tooltip>\n\n            <Tooltip title={formik.errors.number}>\n              <Label>\n                <Input\n                  autoComplete=\"off\"\n                  name=\"number\"\n                  placeholder=\"Phone\"\n                  type=\"tel\"\n                  variant=\"outlined\"\n                  onChange={formik.handleChange}\n                  value={formik.values.number}\n                  pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n                />\n                {formik.values.number.length > 12 ? (\n                  <span>{formik.errors.number}</span>\n                ) : console.log(123)}\n              </Label>\n            </Tooltip>\n          </Fieldset>\n          <StyledButton type=\"submit\" disabled={isDisabled}>\n            <CheckCircleIcon sx={{ fontSize: 50, color: 'inherit' }} />\n          </StyledButton>\n        </Box>\n      </ModalBody>\n    </Backdrop>,\n    portal\n  );\n};\n\nconst pattern = {\n  str: \"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\",\n  number: '+?d{1,4}?[-.s]?(?d{1,3}?)?[-.s]?d{1,4}[-.s]?d{1,4}[-.s]?d{1,9}',\n};\n\nconst schema = yup.object().shape({\n  name: yup\n    .string()\n    .matches(pattern.str, 'Name must be a string')\n    .min(3, 'to short, min: 3')\n    .max(16, 'to long, max: 16'),\n\n  number: yup.number().typeError().moreThan(12),\n});\nconst initialValues = {\n  name: '',\n  number: '',\n};\n\nexport default Modal;\n","import styled from '@emotion/styled';\n\nconst ContactItem = styled.li`\n  position: relative;\n  display: flex;\n  align-items: center;\n  justify-content: space-around;\n  width: 100%;\n  padding: 12px 8px 12px 30px;\n  gap: 10px;\n\n  color: #ffff;\n  border-radius: 15px;\n  border: 1px solid #212121;\n  font-size: 18px;\n\n  transition: 0.5s;\n  background-size: 200% auto;\n\n  background-image: linear-gradient(\n    to right,\n    #e99709 0%,\n    #b1bd48 51%,\n    #d61d1d 100%\n  );\n\n  &::before {\n    content: '';\n    position: absolute;\n    top: 0;\n    right: 305px;\n    height: 100%;\n    width: 1px;\n    background-color: #000000;\n    border-radius: 5px;\n  }\n  &:hover {\n    background-color: rgb(255, 105, 0);\n    background-position: right center;\n    color: #ffff;\n    background-color: '';\n  }\n`;\nconst WrapperPhoneNumber = styled.div`\n  width: 75%;\n  text-align: center;\n`;\n\nconst Wrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: flex-start;\n  width: 55%;\n  gap: 10px;\n  font-size: 16px;\n  line-height: 1.7;\n`;\n\nexport { ContactItem, WrapperPhoneNumber, Wrapper };\n","import { useState } from 'react';\nimport ItemBar from 'components/ItemBar/ItemBar';\nimport Modal from 'components/Modal/Modal';\n\nimport {\n  ContactItem,\n  WrapperPhoneNumber,\n  Wrapper,\n} from './ContactListItem.styled';\n\nconst ContactListItem = ({ id, name, number }) => {\n  const [openModal, setOpenModal] = useState(false);\n\n  return (\n    <>\n      <ContactItem>\n        <Wrapper>\n          <p style={{ maxWidth: '150px' }}>{name}</p>\n        </Wrapper>\n        <WrapperPhoneNumber>\n          <p>{number}</p>\n        </WrapperPhoneNumber>\n        <ItemBar id={id} isOpenModal={setOpenModal} />\n      </ContactItem>\n      {openModal && (\n        <Modal id={id} name={name} number={number} onClose={setOpenModal} />\n      )}\n    </>\n  );\n};\n\nexport default ContactListItem;\n","import styled from '@emotion/styled';\n\nconst ContactsList = styled.ul`\n  display: flex;\n  flex-direction: column-reverse;\n  gap: 10px;\n  justify-content: center;\n  width: 100%;\n`;\n\nconst Label = styled.div`\n  display: flex;\n\n  width: 100%;\n\n    margin-left: 55px;\n  gap: 165px;\n\n\n  & span {\n    font-size: 20px;\n    font-weight: 500;\n  }\n\n  & i {\n    font-size: 18px;\n    transform: translate(0, 2px);\n  }\n`;\n\nconst Wrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  gap: 12px;\n`;\n\nexport { ContactsList, Label, Wrapper };\n","export const selectFilter = state => state.filter;\nexport const selectContacts = state => state.contacts.queries;\n","import { BsPersonSquare, BsPhoneFill } from 'react-icons/bs';\n\nimport contactsFiltration from 'services/contactsFiltration';\nimport ContactListItem from 'components/ContactListItem/ContactListItem';\nimport { ContactsList, Label, Wrapper } from './ContactList.styled';\nimport { selectFilter } from 'redux/phonebook/selectors';\nimport { useGetContactsQuery } from 'redux/phonebook/contactsSlice';\nimport { useSelector } from 'react-redux';\n\nconst ContactList = () => {\n  const filter = useSelector(selectFilter);\n  const { data, isLoading } = useGetContactsQuery();\n  const contacts = contactsFiltration(data, filter);\n  if (isLoading) {\n    return <h2 style={{ textAlign: 'center' }}>loading...</h2>;\n  }\n  return (\n    <>\n      {isLoading && <h2>loading...</h2>}\n      <Label>\n        <Wrapper>\n          <i>\n            <BsPersonSquare />\n          </i>\n          <span>Name:</span>\n        </Wrapper>\n        <Wrapper>\n          <i>\n            <BsPhoneFill />\n          </i>\n          <span>Phone:</span>\n        </Wrapper>\n      </Label>\n      <ContactsList>\n        {contacts.map(({ id, name, number }) => (\n          <ContactListItem key={id} id={id} name={name} number={number} />\n        ))}\n      </ContactsList>\n    </>\n  );\n};\n\nexport default ContactList;\n","import styled from '@emotion/styled';\n\nconst Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  gap: 10px;\n  width: 100%;\n  margin-bottom: 10px;\n  & span {\n    font-weight: 500;\n    font-size: 22px;\n    margin-bottom: 15px;\n  }\n`;\nconst Input = styled.input`\n  height: 35px;\n  width: 100%;\n  padding-left: 15px;\n  background-color: #ffffff;\n  font-size: 16px;\n  border: none;\n  border-radius: 5px;\n  outline: yellow;\n  border: 2px solid #212121;\n  &:focus,\n  &:hover {\n  }\n`;\n\nexport { Label, Input };\n","import { useDispatch, useSelector } from 'react-redux';\nimport { toFilter } from 'redux/phonebook/filterSlice';\nimport { selectFilter } from 'redux/phonebook/selectors';\nimport { Input, Label } from './Filter.styled';\n\nconst Filter = () => {\n  const filter = useSelector(selectFilter);\n  const dispatch = useDispatch();\n\n  const handelFilterChange = e => {\n    dispatch(toFilter(e.target.value));\n  };\n\n  return (\n    <Label>\n      <span>Find contacts by name or phone number</span>\n      <Input\n        type=\"text\"\n        name=\"filter\"\n        value={filter}\n        onChange={handelFilterChange}\n      />\n    </Label>\n  );\n};\n\nexport default Filter;\n","import { Box } from '@mui/system';\nimport { Stack } from '@mui/system';\nimport { CircularProgress } from '@mui/material';\n\nimport { useGetContactsQuery } from 'redux/phonebook/contactsSlice';\n\nimport { SubTitle } from 'components/ContactForm/ContactForm.styled';\nimport ContactList from 'components/ContactList';\nimport Filter from 'components/Filter';\nimport { Form as Container } from 'components/SignUp/SignUp.styled';\n\nconst Contacts = () => {\n  const { data = [], isFetching } = useGetContactsQuery();\n\n  if (data.length <= 0) {\n    return (\n      <Container component=\"div\" sx={{ width: '45%', border: 'none' }}>\n        <SubTitle>There will be your contacts here</SubTitle>\n      </Container>\n    );\n  }\n\n  return (\n    <Container component=\"div\" sx={{ minWidth: '600px', maxWidth: '45%' }}>\n      <Filter />\n      <Box component=\"div\" sx={{ position: 'relative', width: '100%' }}>\n        <SubTitle>Contacts</SubTitle>\n\n        {isFetching && (\n          <Stack\n            sx={{\n              color: 'grey.500',\n              position: 'absolute',\n              right: '50%',\n              transform: 'translate(50%,30%)',\n            }}\n            spacing={2}\n            direction=\"row\"\n          >\n            <CircularProgress color=\"success\" />\n          </Stack>\n        )}\n      </Box>\n      <ContactList />\n    </Container>\n  );\n};\n\nexport default Contacts;\n","import ContactForm from 'components/ContactForm';\nimport Contacts from 'components/Contacts/Contacts';\n\nimport { Container } from 'components/SignUp/SignUp.styled';\n\nconst ContactsPage = () => {\n  return (\n    <section>\n      <Container\n        sx={{\n          flexDirection: 'column',\n          justifyContent: 'center',\n          alignItems: 'center',\n          gap: 14,\n          marginTop: -20,\n        }}\n      >\n        <ContactForm />\n        <Contacts />\n      </Container>\n    </section>\n  );\n};\n\nexport default ContactsPage;\n"],"names":["Label","styled","Form","Input","Button","SubTitle","StyledInput","TextField","width","height","color","fontSize","borderBottomColor","borderColor","padding","StyledButton","borderRadius","textTransform","boxShadow","transition","backgroundSize","backgroundImage","backgroundPosition","textDecoration","backgroundColor","Box","Container","contacts","contactName","some","name","Report","initialValues","number","schema","yup","shape","matches","min","max","required","typeError","moreThan","data","useGetContactsQuery","useAddContactMutation","addContact","isLoading","formik","useFormik","onSubmit","values","resetForm","isNewName","trim","validationSchema","isDisabled","isValid","dirty","handleSubmit","Tooltip","title","errors","autoComplete","placeholder","type","onChange","handleChange","value","touched","pattern","disabled","Stack","sx","margin","display","spacing","direction","CircularProgress","size","filter","normalizedFilter","toLowerCase","includes","WrapperIcon","muiStyled","IconButton","id","isOpenModal","useDeleteContactMutation","deleteContact","isUninitialized","hover","onClick","BorderColor","PersonRemove","alignItems","justifyContent","Backdrop","ModalBody","Fieldset","CloseBtn","Icon","CloseIcon","AvatarBgd","onClose","useEditContactMutation","editContact","isSuccess","isError","portal","document","getElementById","editedName","editedPhone","useEffect","setTimeout","handleKeyDown","e","code","window","addEventListener","removeEventListener","ReactDOM","stopPropagation","src","alt","style","marginBottom","ArrowDownward","CheckCircleOutline","WarningAmber","component","flexWrap","variant","length","console","log","CheckCircle","ContactItem","WrapperPhoneNumber","Wrapper","useState","openModal","setOpenModal","maxWidth","ContactsList","selectFilter","state","useSelector","contactsFiltration","textAlign","map","dispatch","useDispatch","toFilter","target","isFetching","border","minWidth","position","right","transform","flexDirection","gap","marginTop"],"sourceRoot":""}